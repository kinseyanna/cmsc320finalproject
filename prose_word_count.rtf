{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww25400\viewh13480\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 ### Introduction\
Our project is surrounding the Twitter accounts of the Black Lives Matter Movement (@Blklivesmatter) and Donald Trump (@realDonaldTrump). We focused on the sentiment of the tweets of each account versus each individual tweet's replies. Our question was to find out what account would have more stark of a difference between tweets and their replies - in other words, whether positive tweets by BLM or Donald Trump would have more negative replies. Our hypothesis was that Donald Trump's account would have more negative replies to his positive tweets.\
\
Sentiment analysis is a way of classifying a text as having a positive, negative, or neutral sentiment using text analysis.  However, because of the complex and sarcastic components of the English language, sentiment analysis is not a sole way of categorizing something as positive or negative. Because of this, we needed other factors to tell the sentiment of a reply. In order to do this, we created a feature vector and used that to classify the sentiment of the reply and used SVM machine learning in order to have the machine classify it for us.\
\
The features in our feature vector are as follows. \
\
Our first feature was the original sentiment analysis, because although it is not reliably conclusive on its own, it can tell us something about the mood of the sentence. \
\
The second feature we worked on focused on the user who posted the reply to the specific tweet. We checked whether or not the user was following other accounts that aligned with Donald Trump's or BLM's views, including politicians of either party.\
\
The third feature we worked on also focused on the user who posted the reply to the specific tweet. We compared the user's hashtags for the last year to known Trump-positive and BLM-positive hashtags, and noted numerically the number of hashtags that were similar for each user. \
\
\
\
\
\
\
### Accessing Twitter's Data\
\
In order to access Twitter's API, we had to create applications and personally get authentication tokens. Even though we are all allowed access to Twitter, we cannot give out these confidential tokens on this public notebook. In order to get past this hurdle, we created a function that would pull from our own files on our own machines for these tokens. In the cell below is a copy of credentials.py, without the confidential information. \
\
Once we did that, we started querying. However, since Twitter has a rule of a maximum of 15 queries in 15 minutes, and we were querying for replies of more than 15 tweets, we had to find another way to access the data when doing our project. We added the tweets of both accounts and their replies dated from December 1st, 2016 to December 8th, 2017 to individual CSVs to work with them. We slowly added them to these CSVs to circumvent the 15-queries-maximum rule. See below the code we used to access Twitter's API in order to get the data. \
\
\
\
\
\
\
#### An example of credentials.py \
#This is a file that holds confidential information about a Twitter user and their authentication tokens. Please do not read further if you are not authorized.\
  \
CONSUMER_KEY = ' '\
CONSUMER_SECRET = ' '\
ACCESS_TOKEN = ' '\
ACCESS_SECRET = ' '\
\
\
\
\
\
\
\
\
### Collecting the Data in a Functional Way\
\
Now that the data is in a csv and collected, we can put it into a dataframe to work with. \
\
This dataframe will only include those tweets, as well as their replies, stemming from a year ago until now, as the most controversial times for both accounts are within that time frame. Specifically, Donald Trump became President of the United States in January and was controversial in the fall leading up to the election. Even though the Black Lives Matter movement was created in 2013 and became nationally recognized in 2014 after the shootings of Michael Brown and Eric Garner, it would be unrelated to our topic to compare the sentiment analysis of Donald Trump before he became controversial in the magnitude that he is now.\
\
We also deleted unnecessary columns in the tweet json, like followers_count and following, which don't matter in regards to what we are doing. Since the Twitter json structure doesn't include the tweet id itself and (if it is a reply) the id of the tweet it is replying to, we had to put that information as well as the text of the tweet (to match them) into a separate CSV and compare them to add both sets of information to the dataframe. \
\
\
\
\
\
\
\
#### Sentiment Analysis\
\
As explained before, sentiment analysis is a basic way of analyzing a text to tell if it has a positive, negative, or neutral sentiment. NLTK is the library we will use to do this section. This will be one of the features for the feature vector. }